#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —á–∞–Ω–∫–æ–≤–∞–Ω–∏—è
"""

import os
import sys
import time
from pathlib import Path
from loguru import logger

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent.parent))

from src.processors.gemini_chunker import GeminiChunker

def test_caching():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    test_text = """
    –í–ï–†–•–û–í–ù–´–ô –°–£–î –†–û–°–°–ò–ô–°–ö–û–ô –§–ï–î–ï–†–ê–¶–ò–ò
    –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï
    –æ—Ç 15 –∞–≤–≥—É—Å—Ç–∞ 2023 –≥. ‚Ññ 44-–ö–ì23-11-–ö7
    
    –°—É–¥–µ–±–Ω–∞—è –∫–æ–ª–ª–µ–≥–∏—è –ø–æ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–º –¥–µ–ª–∞–º –í–µ—Ä—Ö–æ–≤–Ω–æ–≥–æ –°—É–¥–∞ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–ª–∞ –≤ —Å—É–¥–µ–±–Ω–æ–º –∑–∞—Å–µ–¥–∞–Ω–∏–∏ –∫–∞—Å—Å–∞—Ü–∏–æ–Ω–Ω—É—é –∂–∞–ª–æ–±—É...
    
    –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, —á—Ç–æ –∏—Å—Ç–µ—Ü –ø—Ä–∏–æ–±—Ä–µ–ª —É –æ—Ç–≤–µ—Ç—á–∏–∫–∞ —Ç–æ–≤–∞—Ä –Ω–µ–Ω–∞–¥–ª–µ–∂–∞—â–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞. –û—Ç–≤–µ—Ç—á–∏–∫ –æ—Ç–∫–∞–∑–∞–ª—Å—è –ø—Ä–∏–Ω—è—Ç—å —Ç–æ–≤–∞—Ä –æ–±—Ä–∞—Ç–Ω–æ, —Å—Å—ã–ª–∞—è—Å—å –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ —Å—Ä–æ–∫–∞.
    
    –°—É–¥ –ø–µ—Ä–≤–æ–π –∏–Ω—Å—Ç–∞–Ω—Ü–∏–∏ –ø—Ä–∏—à–µ–ª –∫ –≤—ã–≤–æ–¥—É, —á—Ç–æ –Ω–∞ –∏—Å—Ç—Ü–µ –ª–µ–∂–∏—Ç –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—å –¥–æ–∫–∞–∑–∞—Ç—å –Ω–∞–ª–∏—á–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–∞. –û–¥–Ω–∞–∫–æ –¥–∞–Ω–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç –∑–∞–∫–æ–Ω—É.
    
    –í —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å–æ —Å—Ç–∞—Ç—å–µ–π 18 –ó–∞–∫–æ–Ω–∞ –†–§ "–û –∑–∞—â–∏—Ç–µ –ø—Ä–∞–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π", –ø—Ä–æ–¥–∞–≤–µ—Ü –æ–±—è–∑–∞–Ω –ø—Ä–∏–Ω—è—Ç—å —Ç–æ–≤–∞—Ä –Ω–µ–Ω–∞–¥–ª–µ–∂–∞—â–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞—á–µ—Å—Ç–≤–∞ –∑–∞ —Å–≤–æ–π —Å—á–µ—Ç.
    
    –í–µ—Ä—Ö–æ–≤–Ω—ã–π –°—É–¥ –†–§ —É–∫–∞–∑–∞–ª: ¬´–†–∞–∑—Ä–µ—à–∞—è —Å–ø–æ—Ä, —Å—É–¥ –ø—Ä–∏—à—ë–ª –∫ –≤—ã–≤–æ–¥—É, —á—Ç–æ –Ω–∞ –∏—Å—Ç—Ü–µ –ª–µ–∂–∏—Ç –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—å –¥–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω–Ω–æ–≥–æ –µ—é —Ç–æ–≤–∞—Ä–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª–æ —É—Å–ª–æ–≤–∏—è–º –¥–æ–≥–æ–≤–æ—Ä–∞... –ú–µ–∂–¥—É —Ç–µ–º, –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω—ã–º–∏ –≤—ã—à–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è–º–∏ –¥–µ–π—Å—Ç–≤—É—é—â–µ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—å –¥–æ–∫–∞–∑–∞—Ç—å –¥–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å —Å–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –ª–µ–∂–∏—Ç –∏–º–µ–Ω–Ω–æ –Ω–∞ –ø—Ä–æ–¥–∞–≤—Ü–µ —Ç–æ–≤–∞—Ä–∞¬ª.
    """
    
    logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É—é –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —á–∞–Ω–∫–æ–≤–∞–Ω–∏—è...")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —á–∞–Ω–∫–µ—Ä–∞
    chunker = GeminiChunker()
    
    # –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å (–¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ API)
    logger.info("üì° –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å (—á–µ—Ä–µ–∑ API)...")
    start_time = time.time()
    chunks1 = chunker.chunk_document(test_text, "test_document.pdf")
    api_time = time.time() - start_time
    
    logger.info(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(chunks1)} —á–∞–Ω–∫–æ–≤ –∑–∞ {api_time:.2f} —Å–µ–∫—É–Ω–¥")
    
    # –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å (–¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à)
    logger.info("üíæ –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å (–∏–∑ –∫—ç—à–∞)...")
    start_time = time.time()
    chunks2 = chunker.chunk_document(test_text, "test_document.pdf")
    cache_time = time.time() - start_time
    
    logger.info(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(chunks2)} —á–∞–Ω–∫–æ–≤ –∑–∞ {cache_time:.2f} —Å–µ–∫—É–Ω–¥")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    if chunks1 == chunks2:
        logger.info("‚úÖ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        if cache_time > 0:
            logger.info(f"‚ö° –£—Å–∫–æ—Ä–µ–Ω–∏–µ: {api_time/cache_time:.1f}x")
        else:
            logger.info("‚ö° –£—Å–∫–æ—Ä–µ–Ω–∏–µ: –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ (–∏–∑ –∫—ç—à–∞)")
    else:
        logger.error("‚ùå –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∫—ç—à–∞
    cache_size = len(chunker.cache)
    logger.info(f"üìä –†–∞–∑–º–µ—Ä –∫—ç—à–∞: {cache_size} –∑–∞–ø–∏—Å–µ–π")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–∞–∑–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏ (–Ω–æ —Ç–æ—Ç –∂–µ —Ç–µ–∫—Å—Ç)
    logger.info("üîÑ –¢–µ—Å—Ç–∏—Ä—É—é —Å —Ä–∞–∑–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏...")
    
    chunks3 = chunker.chunk_document(test_text, "different_file.pdf")
    cache_size_after = len(chunker.cache)
    
    # –ö—ç—à –Ω–µ –¥–æ–ª–∂–µ–Ω –æ–±–Ω–æ–≤–∏—Ç—å—Å—è, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–∫—Å—Ç —Ç–æ—Ç –∂–µ
    if cache_size_after == cache_size:
        logger.info("‚úÖ –ö—ç—à —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å")
    else:
        logger.warning("‚ö†Ô∏è –ö—ç—à –æ–±–Ω–æ–≤–∏–ª—Å—è –¥–ª—è —Ç–æ–≥–æ –∂–µ —Ç–µ–∫—Å—Ç–∞")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –¥—Ä—É–≥–∏–º —Ç–µ–∫—Å—Ç–æ–º
    logger.info("üîÑ –¢–µ—Å—Ç–∏—Ä—É—é —Å –¥—Ä—É–≥–∏–º —Ç–µ–∫—Å—Ç–æ–º...")
    different_text = "–≠—Ç–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –¥—Ä—É–≥–æ–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è."
    chunks4 = chunker.chunk_document(different_text, "different_text.pdf")
    cache_size_final = len(chunker.cache)
    
    if cache_size_final > cache_size_after:
        logger.info("‚úÖ –ö—ç—à –æ–±–Ω–æ–≤–∏–ª—Å—è –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç–∞")
    else:
        logger.warning("‚ö†Ô∏è –ö—ç—à –Ω–µ –æ–±–Ω–æ–≤–∏–ª—Å—è –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç–∞")
    
    # –û—Ü–µ–Ω–∫–∞ —ç–∫–æ–Ω–æ–º–∏–∏
    if api_time > 0 and cache_time > 0:
        savings_percent = (api_time - cache_time) / api_time * 100
        logger.info(f"üí∞ –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏: {savings_percent:.1f}%")
        
        # –ü—Ä–∏–º–µ—Ä–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –±–æ–ª—å—à–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞
        estimated_documents = 1000
        estimated_savings = estimated_documents * (api_time - cache_time)
        logger.info(f"üìà –î–ª—è {estimated_documents} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —ç–∫–æ–Ω–æ–º–∏—è: {estimated_savings:.1f} —Å–µ–∫—É–Ω–¥")

def test_cache_persistence():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫—ç—à–∞ –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏"""
    logger.info("üíæ –¢–µ—Å—Ç–∏—Ä—É—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫—ç—à–∞ –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏...")
    
    test_text = "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—ç—à–∞."
    
    # –ü–µ—Ä–≤–∞—è —Å–µ—Å—Å–∏—è
    chunker1 = GeminiChunker()
    chunks1 = chunker1.chunk_document(test_text, "persistence_test.pdf")
    logger.info(f"–°–µ—Å—Å–∏—è 1: {len(chunks1)} —á–∞–Ω–∫–æ–≤")
    
    # –í—Ç–æ—Ä–∞—è —Å–µ—Å—Å–∏—è (–Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä)
    chunker2 = GeminiChunker()
    chunks2 = chunker2.chunk_document(test_text, "persistence_test.pdf")
    logger.info(f"–°–µ—Å—Å–∏—è 2: {len(chunks2)} —á–∞–Ω–∫–æ–≤")
    
    if chunks1 == chunks2:
        logger.info("‚úÖ –ö—ç—à —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏!")
    else:
        logger.warning("‚ö†Ô∏è –ö—ç—à –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    if not os.getenv("OPENAI_API_KEY"):
        logger.warning("‚ö†Ô∏è OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ª–æ–≥–∏–∫—É –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è.")
        test_cache_persistence()
        return
    
    try:
        test_caching()
        test_cache_persistence()
        logger.info("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
