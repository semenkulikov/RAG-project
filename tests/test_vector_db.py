"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import os
from vector_database import VectorDatabase
from config import JSON_DIR

def test_vector_database():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –≤–µ–∫—Ç–æ—Ä–Ω—É—é –±–∞–∑—É
        print("üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        vector_db = VectorDatabase()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏–∑ JSON —Ñ–∞–π–ª–æ–≤
        print("üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–∑ JSON —Ñ–∞–π–ª–æ–≤...")
        vector_db.load_from_json_files(JSON_DIR)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        info = vector_db.get_collection_info()
        print(f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏:")
        print(f"   - –ù–∞–∑–≤–∞–Ω–∏–µ: {info['name']}")
        print(f"   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {info['document_count']}")
        print(f"   - –ü—É—Ç—å –∫ –ë–î: {info['db_path']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
        test_queries = [
            "–¥–æ–≥–æ–≤–æ—Ä –∑–∞–π–º–∞",
            "—Ä–∞—Å–ø–∏—Å–∫–∞ –¥–µ–Ω—å–≥–∏",
            "—Å—É–¥ —É—Å—Ç–∞–Ω–æ–≤–∏–ª",
            "–ø—Ä–∞–≤–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è"
        ]
        
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞:")
        for query in test_queries:
            print(f"\nüìù –ó–∞–ø—Ä–æ—Å: '{query}'")
            results = vector_db.search_similar(query, n_results=2)
            
            if results:
                for i, result in enumerate(results):
                    print(f"   {i+1}. {result['text'][:80]}...")
                    print(f"      –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: {result['distance']:.4f}")
                    print(f"      –¢–∏–ø: {result['metadata'].get('chunk_type', 'unknown')}")
            else:
                print("   ‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        print(f"\nüéâ –¢–µ—Å—Ç –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

if __name__ == "__main__":
    success = test_vector_database()
    if not success:
        print("\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
