#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ChatGPT-—á–∞–Ω–∫–æ–≤–∞–Ω–∏—è
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent))

from gemini_chunker import GeminiChunker
from data_processor import LegalDocumentProcessor
from loguru import logger

def test_chatgpt_chunking():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç ChatGPT —á–∞–Ω–∫–æ–≤–∞–Ω–∏–µ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∏–∑ Model.txt
    test_text = """
    –í–ï–†–•–û–í–ù–´–ô –°–£–î –†–û–°–°–ò–ô–°–ö–û–ô –§–ï–î–ï–†–ê–¶–ò–ò
    –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï
    –æ—Ç 15 –∞–≤–≥—É—Å—Ç–∞ 2023 –≥. ‚Ññ 44-–ö–ì23-11-–ö7
    
    –°—É–¥–µ–±–Ω–∞—è –∫–æ–ª–ª–µ–≥–∏—è –ø–æ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–º –¥–µ–ª–∞–º –í–µ—Ä—Ö–æ–≤–Ω–æ–≥–æ –°—É–¥–∞ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–ª–∞ –≤ —Å—É–¥–µ–±–Ω–æ–º –∑–∞—Å–µ–¥–∞–Ω–∏–∏ –∫–∞—Å—Å–∞—Ü–∏–æ–Ω–Ω—É—é –∂–∞–ª–æ–±—É...
    
    –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, —á—Ç–æ –∏—Å—Ç–µ—Ü –ø—Ä–∏–æ–±—Ä–µ–ª —É –æ—Ç–≤–µ—Ç—á–∏–∫–∞ —Ç–æ–≤–∞—Ä –Ω–µ–Ω–∞–¥–ª–µ–∂–∞—â–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞. –û—Ç–≤–µ—Ç—á–∏–∫ –æ—Ç–∫–∞–∑–∞–ª—Å—è –ø—Ä–∏–Ω—è—Ç—å —Ç–æ–≤–∞—Ä –æ–±—Ä–∞—Ç–Ω–æ, —Å—Å—ã–ª–∞—è—Å—å –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ —Å—Ä–æ–∫–∞.
    
    –°—É–¥ –ø–µ—Ä–≤–æ–π –∏–Ω—Å—Ç–∞–Ω—Ü–∏–∏ –ø—Ä–∏—à–µ–ª –∫ –≤—ã–≤–æ–¥—É, —á—Ç–æ –Ω–∞ –∏—Å—Ç—Ü–µ –ª–µ–∂–∏—Ç –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—å –¥–æ–∫–∞–∑–∞—Ç—å –Ω–∞–ª–∏—á–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–∞. –û–¥–Ω–∞–∫–æ –¥–∞–Ω–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç –∑–∞–∫–æ–Ω—É.
    
    –í —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å–æ —Å—Ç–∞—Ç—å–µ–π 18 –ó–∞–∫–æ–Ω–∞ –†–§ "–û –∑–∞—â–∏—Ç–µ –ø—Ä–∞–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π", –ø—Ä–æ–¥–∞–≤–µ—Ü –æ–±—è–∑–∞–Ω –ø—Ä–∏–Ω—è—Ç—å —Ç–æ–≤–∞—Ä –Ω–µ–Ω–∞–¥–ª–µ–∂–∞—â–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞—á–µ—Å—Ç–≤–∞ –∑–∞ —Å–≤–æ–π —Å—á–µ—Ç.
    
    –í–µ—Ä—Ö–æ–≤–Ω—ã–π –°—É–¥ –†–§ —É–∫–∞–∑–∞–ª: ¬´–†–∞–∑—Ä–µ—à–∞—è —Å–ø–æ—Ä, —Å—É–¥ –ø—Ä–∏—à—ë–ª –∫ –≤—ã–≤–æ–¥—É, —á—Ç–æ –Ω–∞ –∏—Å—Ç—Ü–µ –ª–µ–∂–∏—Ç –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—å –¥–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω–Ω–æ–≥–æ –µ—é —Ç–æ–≤–∞—Ä–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª–æ —É—Å–ª–æ–≤–∏—è–º –¥–æ–≥–æ–≤–æ—Ä–∞... –ú–µ–∂–¥—É —Ç–µ–º, –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω—ã–º–∏ –≤—ã—à–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è–º–∏ –¥–µ–π—Å—Ç–≤—É—é—â–µ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—å –¥–æ–∫–∞–∑–∞—Ç—å –¥–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å —Å–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –ª–µ–∂–∏—Ç –∏–º–µ–Ω–Ω–æ –Ω–∞ –ø—Ä–æ–¥–∞–≤—Ü–µ —Ç–æ–≤–∞—Ä–∞¬ª.
    """
    
    logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É—é ChatGPT —á–∞–Ω–∫–æ–≤–∞–Ω–∏–µ...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Gemini —á–∞–Ω–∫–æ–≤–∞–Ω–∏–µ (—Å —Ä–µ–∑–µ—Ä–≤–æ–º –Ω–∞ ChatGPT)
    chunker = GeminiChunker()
    chunks = chunker.chunk_document(test_text, "test_document.pdf")
    
    logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(chunks)} —á–∞–Ω–∫–æ–≤:")
    for i, chunk in enumerate(chunks, 1):
        logger.info(f"  {i}. {chunk.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')} ({chunk.get('type', 'unknown')})")
        logger.info(f"     –¢–µ–∫—Å—Ç: {chunk.get('text', '')[:100]}...")
        if chunk.get('key_articles'):
            logger.info(f"     –°—Ç–∞—Ç—å–∏: {chunk['key_articles']}")
        logger.info("")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å data_processor
    logger.info("üîó –¢–µ—Å—Ç–∏—Ä—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å data_processor...")
    processor = LegalDocumentProcessor(use_gemini_chunking=True)
    chunks_from_processor = processor.chunk_text(test_text, "test_integration.pdf")
    
    logger.info(f"‚úÖ Data processor —Å–æ–∑–¥–∞–ª {len(chunks_from_processor)} —á–∞–Ω–∫–æ–≤")
    
    # –û—Ü–µ–Ω–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    cost_estimate = chunker.estimate_cost(test_text)
    logger.info(f"üí∞ –û—Ü–µ–Ω–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏: ${cost_estimate['estimated_cost_usd']:.4f}")
    logger.info(f"   –í—Ö–æ–¥–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã: {cost_estimate['input_tokens']:.0f}")
    logger.info(f"   –í—ã—Ö–æ–¥–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã: {cost_estimate['output_tokens']:.0f}")

def test_fallback_chunking():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ —á–∞–Ω–∫–æ–≤–∞–Ω–∏–µ"""
    logger.info("üîÑ –¢–µ—Å—Ç–∏—Ä—É—é —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ —á–∞–Ω–∫–æ–≤–∞–Ω–∏–µ...")
    
    processor = LegalDocumentProcessor(use_gemini_chunking=False)
    test_text = "–ê–±–∑–∞—Ü 1.\n\n–ê–±–∑–∞—Ü 2.\n\n–ê–±–∑–∞—Ü 3."
    
    chunks = processor.fallback_chunking(test_text, "test_fallback.pdf")
    
    logger.info(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–æ–µ —á–∞–Ω–∫–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–ª–æ {len(chunks)} —á–∞–Ω–∫–æ–≤:")
    for chunk in chunks:
        logger.info(f"  - {chunk['title']}: {chunk['text'][:50]}...")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ChatGPT-—á–∞–Ω–∫–æ–≤–∞–Ω–∏—è")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    if not os.getenv("OPENAI_API_KEY"):
        logger.warning("‚ö†Ô∏è OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ —á–∞–Ω–∫–æ–≤–∞–Ω–∏–µ.")
        test_fallback_chunking()
        return
    
    try:
        test_chatgpt_chunking()
        test_fallback_chunking()
        logger.info("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
